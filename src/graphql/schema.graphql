type Post {
  id: ID!
  title: String!
  authorId: ID!
  author: User!
  description: String
  comments: [Comment]
  createdAt: String
}

type Comment {
  id: ID!
  author: User!
  authorId: ID!
  post: Post!
  postId: ID!
  comment: String!
  createdAt: String
}

type User {
  firstName: String!
  lastName: String
  dob: String
  username: String!
  id: ID
  posts(input: QueryParams): [Post!]!
  comments(input: QueryParams): [Comment!]!
}

# Queries

enum Order {
  ASC
  DESC
}

input OrderBy {
  field: String
  order: Order
}

input QueryParams {
  skip: Int
  limit: Int
  orderBy: OrderBy
}

input UserInput {
  firstName: String!
  lastName: String
  dob: String
  username: String!
}

input PostInput {
  title: String!
  description: String
  authorId: ID!
  createdAt: String
}

input CommentInput {
  postId: ID!
  comment: String
  createdAt: String
  authorId: ID!
}

input DeleteInput {
  id: ID!
}

type Query {
  getPosts(input: QueryParams): [Post!]!
  getUsers(input: QueryParams): [User!]!
  getComments(input: QueryParams): [Comment!]!
}

type Mutation {
  createUser(input: UserInput!): User!
  createPost(input: PostInput!): Post!
  createComment(input: CommentInput!): Comment!
  deletePost(id: ID!): Post!
}
